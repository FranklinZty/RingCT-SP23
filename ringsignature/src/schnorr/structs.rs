use crate::commitment::CommitmentScheme;
use ark_ec::CurveGroup;

#[derive(Clone, Debug, Default, Eq, PartialEq)]
pub struct SchnorrProof<C: CurveGroup, COM: CommitmentScheme<C>> {
    // the intermediate commitment vector generated along the proving
    pub commitments: Vec<COM::Commitment>,
    // the opening vector generated along the proving
    pub opening: Vec<C::ScalarField>,
    // the challenge vector generated by merlin transcript
    pub challenge: Vec<C::ScalarField>,
    // the digest of the message
    pub digest: String,
}

#[derive(Clone, Debug, Default, Eq, PartialEq)]
pub struct SchnorrParams<C: CurveGroup, COM: CommitmentScheme<C>> {
    // the number of witness elements
    pub num_witness: usize,
    // the number of public inputs (commitments)
    pub num_pub_inputs: usize,
    // the generators for commitment commitments
    pub public_parameters: COM::PublicParams,
    // the signed message
    pub message: String,
}
